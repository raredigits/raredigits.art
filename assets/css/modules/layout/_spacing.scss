@use "../utilities/breakpoints" as bp;

:root {
  --space-px: 1px;
  --space-xs: calc(var(--base-unit) * 0.25);
  --space-sm: calc(var(--base-unit) * 0.5);
  --space-md: var(--base-unit);
  --space-lg: calc(var(--base-unit) * 2);
  --space-xl: calc(var(--base-unit) * 3);
  --space-xxl: calc(var(--base-unit) * 6);
  --space-fr: var(--global-fr);

  // Percentages
  --space-5: 5%;
  --space-10: 10%;
  --space-15: 15%;
  --space-20: 20%;
  --space-25: 25%;
  --space-30: 30%;
  --space-33: 33%;
  --space-50: 50%;
  --space-60: 60%;
  --space-66: 66%;
  --space-70: 70%;
  --space-75: 75%;
  --space-80: 80%;
  --space-90: 90%;
  --space-95: 95%;
  --space-100: 100%;

  // Misc
  --space-0: 0;
  --space-auto: auto;
}

$spaces: px, xs, sm, md, lg, xl, xxl, fr,
         5, 10, 15, 20, 25, 30, 33, 50,
         60, 66, 70, 75, 80, 90, 95, 100,
         0, auto;

.full-width {
  width: 100%;
}

.full-width-caption {
  width: calc(100% + var(--space-lg));
  margin-left: calc(-1 * var(--space-lg));
  margin-right: calc(-1 * var(--space-lg));

  @include bp.mobile {
    width: calc(100% + var(--space-md));
    margin-left: calc(-1 * var(--space-sm));
  }
}

@each $space in $spaces {
  .width-#{$space} {
    width: var(--space-#{$space});
  }

  .height-#{$space} {
    height: var(--space-#{$space});
  }

  .margin-#{$space} {
    margin: var(--space-#{$space});
  }

  .margin-t-#{$space} {
    margin-top: var(--space-#{$space});
  }

  .margin-r-#{$space} {
    margin-right: var(--space-#{$space});
  }

  .margin-b-#{$space} {
    margin-bottom: var(--space-#{$space});
  }

  .margin-l-#{$space} {
    margin-left: var(--space-#{$space});
  }

  .margin-x-#{$space} {
    margin-left: var(--space-#{$space});
    margin-right: var(--space-#{$space});
  }

  .margin-y-#{$space} {
    margin-top: var(--space-#{$space});
    margin-bottom: var(--space-#{$space});
  }

  .padding-#{$space} {
    padding: var(--space-#{$space});
  }

  .padding-t-#{$space} {
    padding-top: var(--space-#{$space});
  }

  .padding-r-#{$space} {
    padding-right: var(--space-#{$space});
  }

  .padding-b-#{$space} {
    padding-bottom: var(--space-#{$space});
  }

  .padding-l-#{$space} {
    padding-left: var(--space-#{$space});
  }

  .padding-x-#{$space} {
    padding-left: var(--space-#{$space});
    padding-right: var(--space-#{$space});
  }

  .padding-y-#{$space} {
    padding-top: var(--space-#{$space});
    padding-bottom: var(--space-#{$space});
  }

  .gap-#{$space} {
    gap: var(--space-#{$space});
  }

  .gap-x-#{$space} {
    column-gap: var(--space-#{$space});
  }

  .gap-y-#{$space} {
    row-gap: var(--space-#{$space});
  }

  .air-#{$space} {
    width: 100%;
    height: var(--space-#{$space});
  }

  .top-#{$space} {
    top: var(--space-#{$space});
  }

  .right-#{$space} {
    right: var(--space-#{$space});
  }

  .bottom-#{$space} {
    bottom: var(--space-#{$space});
  }

  .left-#{$space} {
    left: var(--space-#{$space});
  }
}

@mixin generate-responsive-spacings($properties, $prefix, $space-vars) {
  @each $space in $space-vars {
    @include bp.mobile {
      .mobile\\:#{$prefix}-#{$space} {
        @each $prop in $properties {
          #{$prop}: var(--space-#{$space});
        }
      }
    }

    @include bp.tablet {
      .tablet\\:#{$prefix}-#{$space} {
        @each $prop in $properties {
          #{$prop}: var(--space-#{$space});
        }
      }
    }

    @include bp.desktop {
      .desktop\\:#{$prefix}-#{$space} {
        @each $prop in $properties {
          #{$prop}: var(--space-#{$space});
        }
      }
    }
  }
}

// Responsive generators
@include generate-responsive-spacings(("margin"), "margin", $spaces);
@include generate-responsive-spacings(("margin-top"), "margin-t", $spaces);
@include generate-responsive-spacings(("margin-right"), "margin-r", $spaces);
@include generate-responsive-spacings(("margin-bottom"), "margin-b", $spaces);
@include generate-responsive-spacings(("margin-left"), "margin-l", $spaces);
@include generate-responsive-spacings(("margin-top", "margin-bottom"), "margin-y", $spaces);
@include generate-responsive-spacings(("margin-left", "margin-right"), "margin-x", $spaces);

@include generate-responsive-spacings(("padding"), "padding", $spaces);
@include generate-responsive-spacings(("padding-top"), "padding-t", $spaces);
@include generate-responsive-spacings(("padding-right"), "padding-r", $spaces);
@include generate-responsive-spacings(("padding-bottom"), "padding-b", $spaces);
@include generate-responsive-spacings(("padding-left"), "padding-l", $spaces);
@include generate-responsive-spacings(("padding-top", "padding-bottom"), "padding-y", $spaces);
@include generate-responsive-spacings(("padding-left", "padding-right"), "padding-x", $spaces);

@include generate-responsive-spacings(("gap"), "gap", $spaces);
@include generate-responsive-spacings(("row-gap"), "gap-y", $spaces);
@include generate-responsive-spacings(("column-gap"), "gap-x", $spaces);

@include generate-responsive-spacings(("width"), "width", $spaces);
@include generate-responsive-spacings(("height"), "height", $spaces);

@include generate-responsive-spacings(("top"), "top", $spaces);
@include generate-responsive-spacings(("right"), "right", $spaces);
@include generate-responsive-spacings(("bottom"), "bottom", $spaces);
@include generate-responsive-spacings(("left"), "left", $spaces);